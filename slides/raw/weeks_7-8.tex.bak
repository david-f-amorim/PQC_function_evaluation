\documentclass{beamer}

\usepackage{amsmath}
\usepackage{amssymb}
\usepackage{amsthm}
\usepackage{mathtools}
\usepackage[UKenglish]{babel}
\usepackage{enumerate}
\usepackage{graphicx}
\usepackage{braket}
\usepackage{esint}
\usepackage{float}
\usepackage{tabularx}
\usepackage{array}
\usepackage{subcaption}
\usepackage{hyperref}
\usepackage{xcolor}
\hypersetup{colorlinks=false, bookmarks=true}
\usepackage{tikz}
\usetikzlibrary{quantikz2}
\usepackage{adjustbox}



\usetheme{Madrid}
\usecolortheme{seahorse}
\usefonttheme{professionalfonts}
\useinnertheme{circles}

\AtBeginSection[]
{
  \begin{frame}
    \frametitle{Table of Contents}
    \tableofcontents[currentsection]
  \end{frame}
}

\setbeamertemplate{caption}[numbered]

\title[QCNN State Preparation]{A QCNN for Quantum State Preparation}
\subtitle{Carnegie Vacation Scholarship}
\author[David Amorim]{David Amorim}
\institute[]{}
\date[21/08/2024]{Weeks 7-8 \\(12/08/2024 - 23/08/2024)}

\begin{document}

\frame{\titlepage}

\begin{frame}
\frametitle{Aims for the Week}
The following aims were set at the last meeting (14/08/2024):

\begin{alertblock}{New Phase Encoding Approach}
Investigate a new approach to phase encoding using linear piecewise phase functions without explicit function evaluation.  
\end{alertblock}

\begin{alertblock}{Handover}
Hand over the slides, documentation, code and the poster for the Carnegie Trust.
\end{alertblock}
\end{frame}

\section{Phase Encoding}

\begin{frame}
\frametitle{Preliminaries}

\begin{itemize}
\item Consider an \alert{$n$-qubit register} with computational basis states $\ket{j} = \ket{j_0 j_1 ... j_{n-1}}$ representing $n$-bit strings
\item Let \alert{$p$} of the register qubits be \alert{precision qubits} so that 
\begin{equation} 
j = \sum^{n -1}_{k=0} j_k 2^{k-p}
\end{equation}
\item Now consider a \alert{phase function} $\Psi$ over the domain $\mathcal{D} = \{ j \}$ and construct an \alert{$M$-fold partition} sub-domains $\mathcal{D}_u$:
\begin{equation}
\mathcal{D} = \bigcup_{u=1}^M \mathcal{D}_u, \; \; \; \mathcal{D}_u \cap \mathcal{D}_v = \emptyset, 
\end{equation}
\item Take \alert{$M = 2^m$} with $m \leq n$ and let the sub-domains be equally sized $(|\mathcal{D}_u| = |\mathcal{D}_v|$)
\end{itemize}
\end{frame}

\begin{frame}
\frametitle{Preliminaries}
\begin{alertblock}{Aim}
Construct an appropriate operator to transform 
\begin{equation}
\ket{j} \mapsto e^{i \Psi (j)} \ket{j}
\end{equation}
via the linear piecewise approximation
\begin{equation}
\ket{j} \mapsto e^{i (\alpha_u j + \beta_u)} \ket{j} \; \; \; (j \in \mathcal{D}_u)
\end{equation}
\end{alertblock}
\end{frame}

\begin{frame}
\frametitle{Initial Remarks}
\begin{itemize}
\item The $2^m$ pairs of coefficients $(\alpha_u, \beta_u)$ require \alert{$2^m$ independent operators} $\hat{O}_u$ to implement the mapping $\ket{j} \mapsto e^{i (\alpha_u j + \beta_u)} \ket{j}$
\item Each operator $\hat{O}_u$ will generally involve \alert{controlled rotations} on all \alert{$n$ qubits} in the register, with \alert{$m$} qubits acting as \alert{controls}  
\item Thus, the expected lower bound for controlled rotations is \alert{$\sim \Omega (2^m n)$}
\item Note that \alert{$m$-controlled operations} require \alert{$\Theta(m^2)$} CNOT gates [\emph{Barenco 1995}\footnote{\url{https://arxiv.org/pdf/quant-ph/9503016}}, Cor 7.6] or \alert{$\Theta(m)$} CNOT gates when using ancillae [\emph{Barenco 1995}, Cor 7.12]
\item To avoid this additional factor in the gate count and meet the lower bound \alert{only single-controlled operations} will be employed, leading to a more complex control architecture 
\end{itemize}
\end{frame}

\begin{frame}
\frametitle{Constructing $\hat{O}_u$}
\begin{itemize}
\item Consider the single-qubit operators 
\begin{equation}
\hat{P}^{(k)}(\varphi) = \begin{pmatrix}
e^{i \varphi} & 0 \\ 0 & e^{i \varphi}
\end{pmatrix}, \; \; \; \hat{R}^{(k)}(\varphi) = \begin{pmatrix}
1 & 0 \\ 0 & e^{i \varphi}
\end{pmatrix}
\end{equation}
each acting on the $k$th qubit
\item Now define \alert{
\begin{equation}
\hat{U}^{(k)}_u \equiv \hat{P}^{(k)} (\beta_u /n ) \hat{R}^{(k)} (\alpha_u 2^{k-p})
\end{equation}}
\item Then \alert{
\begin{equation}
\hat{O}_u \equiv \bigotimes^{n-1}_{k=0} \hat{U}^{(k)}_u
\end{equation}}
transforms 
\begin{equation}
\ket{j} \mapsto \exp \left[ i \left( \sum_{k=0}^{n-1} \alpha_u j_k 2^{k-p} + \beta_u \right) \right] \ket{j} = e^{i (\alpha_u j + \beta_u )} \ket{j}
\end{equation}
\end{itemize}
\end{frame}

\begin{frame}
\frametitle{The Control Structure}
\begin{itemize}
\item It is straight-forward to construct $\hat{O}_u$ for each of the sub-domains $\mathcal{D}_u$ 
\item More challenging is \alert{applying the correct $\hat{O}_u$} based on the sub-domain corresponding to each $\ket{j}$, which requires \alert{controlling} on the first \alert{$m$ qubits}
\item In order to achieve this with only \alert{single-controlled operations} a control structure similar to \emph{Barenco 1995} Lemmas 6.1, 7.1 is chosen   
\item This involves defining $2^m$ \alert{auxiliary operators $\hat{V}^{(k)}_q$} which give the $\hat{U}^{(k)}_u$ when multiplied in appropriate combinations
\item Since a product of rotation operators corresponds to a sum of rotation angles, the $\hat{V}^{(k)}_q$ can be constructed by solving the appropriate \alert{linear system} in the $\hat{U}^{(k)}_u$
\item The following two slides show examples of the control structure for \alert{`target qubits'}, i.e. the $n-m$ qubits that do not act as controls
\end{itemize}
\end{frame}

\begin{frame}
\frametitle{The Case $m=2$ ($M=4$)}
\begin{figure}
\begin{quantikz}[row sep={0.7cm,between origins}]
\lstick{$\ket{j_0}$} & & & \ctrl{1} &  & \ctrl{1} & \ctrl{2} & \rstick[2]{controls}  \\
\lstick{$\ket{j_1}$} & & \ctrl{1} & \targ{} & \ctrl{1} & \targ & & & \\
\lstick{$\ket{j_k}$} & \gate{V_0} & \gate{V_1} & & \gate{V_2} & & \gate{V_3} & \rstick{target} \\
\end{quantikz}
\caption{Control structure for $m=2$ ($M=4$) with $2 \leq k < n$. The number of controlled operations is $2^{m+1}-3=5$}
\end{figure}

\begin{table}
\centering 
\begin{tabular}{c | c | c || c | c | c }
$(j_0 j_1)$ & Operation & Equiv. $\hat{U}$ & $(j_0 j_1)$ & Operation & Equiv. $\hat{U}$ \\ \hline 
(00) & $\hat{V}_0$ & $\hat{U}_0$ & (10) & $\hat{V}_3 \hat{V}_2 \hat{V}_0 $ & $\hat{U}_2$ \\
(01) & $\hat{V}_2 \hat{V}_1 \hat{V}_0$ & $\hat{U}_1$ & (11) & $\hat{V}_3 \hat{V}_1 \hat{V}_0$ & $\hat{U}_3$ 
\end{tabular}
\caption{Operations applied to $\ket{j_k}$ for various control states}
\end{table}
\hspace{0.5cm}
\end{frame}

\begin{frame}
\frametitle{The Case $m=3$ ($M=8$)}
\begin{figure}
\begin{adjustbox}{width=\textwidth}
\begin{quantikz}[row sep={0.7cm,between origins}]
\lstick{$\ket{j_0}$} & &  \ctrl{3} & \ctrl{1} & & \ctrl{1} & & & & \ctrl{2} & & & & \ctrl{2} & &   \rstick[3]{controls} \\
\lstick{$\ket{j_1}$} &  & &\targ{} & \ctrl{2} & \targ{} & \ctrl{2}& \ctrl{1}&&&& \ctrl{1}&&  & &  \\
\lstick{$\ket{j_2}$} &  & & &&&& \targ{}& \ctrl{1}& \targ{}& \ctrl{1}& \targ{}& \ctrl{1} & \targ{} & \ctrl{1} &  \\
\lstick{$\ket{j_k}$} &  \gate{V_0} & \gate{V_1} & & \gate{V_2}& & \gate{V_3}& & \gate{V_4}& & \gate{V_5}&& \gate{V_6}&& \gate{V_7} &  \rstick[1]{target} \\
\end{quantikz}
\end{adjustbox}
\caption{Control structure for $m=3$ ($M=8$) with $3 \leq k < n$. The number of controlled operations is $2^{m+1}-3=13$}
\end{figure}

\begin{table}
\centering 
\begin{tabular}{c | c | c || c | c | c }
$(j_0 j_1 j_2)$ & Operation & Equiv. $\hat{U}$ & $(j_0 j_1 j_2)$ & Operation & Equiv. $\hat{U}$ \\ \hline 
(000) & $\hat{V}_0$ & $\hat{U}_0$ & (100) & $\hat{V}_6 \hat{V}_5 \hat{V}_2 \hat{V}_1 \hat{V}_0$ & $\hat{U}_4$ \\
(001) & $\hat{V}_7 \hat{V}_4 \hat{V}_0$ & $\hat{U}_1$ & (101) & $\hat{V}_7 \hat{V}_4 \hat{V}_2 \hat{V}_1 \hat{V}_0$ & $\hat{U}_5$ \\
(010) & $\hat{V}_5 \hat{V}_4 \hat{V}_2 \hat{V}_0$ & $\hat{U}_2 $& (110) & $\hat{V}_6 \hat{V}_4 \hat{V}_3 \hat{V}_1 \hat{V}_0  $ & $\hat{U}_6$ \\
(011) & $\hat{V}_7 \hat{V}_6 \hat{V}_3 \hat{V}_2 \hat{V}_0 $ & $\hat{U}_3$ & (111) & $\hat{V}_7 \hat{V}_5 \hat{V}_3 \hat{V}_1 \hat{V}_0$ & $\hat{U}_7$
\end{tabular}
\caption{Operations applied to $\ket{j_k}$ for various control states}
\end{table}
\end{frame}

\begin{frame}
\frametitle{The Control Structure}
\begin{itemize}
\item The control structure required to apply the appropriate $\hat{U}^{(k)}_u$ to the $k$-th target qubit requires \alert{$2^{m+1} -3$ CNOT gates}  
\item As there are $n-m$ target qubits this brings the CNOT count due to the targets to \alert{$(n-m) (2^{m+1}-3)$} 
\item Handling the control structure for the $m$ \alert{`control qubits'} requires slightly more care as the operator to be applied to the $l$-th control qubit is conditional on $\ket{j_l}$ itself 
\item This problem can be addressed by introducing an \alert{ancilla $\ket{0}_a$} and following the procedure:
\begin{enumerate}[(a)]
\item Apply a CNOT gate to the ancilla, controlled by $\ket{j_l}$
\item Apply the same control structure as for the target qubits, with the ancilla as the target 
\item Apply a SWAP gate between the ancilla and $\ket{j_l}$ 
\item Apply a CNOT gate to the ancilla, controlled by $\ket{j_l}$
\end{enumerate}
\item The final step clears the ancilla, allowing it to be \alert{re-used for all $m$} controls
\end{itemize}
\end{frame}

\begin{frame}
\frametitle{Gate Cost}
\begin{itemize}
\item Thus, encoding the phase on each control qubit requires the same structure as before but with an \alert{additional 5 CNOT} gates per control qubit (3 of are part of the SWAP)
\item The $m$ control qubits thus require \alert{$m 2^{m+2}$ CNOT} gates in addition to the \alert{$(n-m) (2^{m+1} -3)$ CNOTs} for the targets
\end{itemize}
\begin{alertblock}{Overall Complexity}
The CNOT cost of the algorithm presented here is 
\begin{equation}
C(n,m) = 2^{m+1} ( n+m) - 3 (n-m), 
\end{equation}
corresponding to the lower bound $\mathcal{O}(n2^m)$ on the complexity
\end{alertblock}
\end{frame}

\begin{frame}
\frametitle{Additional Remarks}
\begin{itemize}
\item Generally, when applying a controlled phase gate, the resulting phase shift cannot be unambiguously attributed to either the control or the target 
\item Here, this \alert{does not pose an issue} as only the overall phase of the $n$-qubit register matters 
\item \emph{Barenco 1995} \alert{omits the explicit construction} of the control structure for general $m$, only pointing towards the generalisation of the cases $m=2,3$ shown here 
\item Circuit structure may be \alert{simplified by using SWAP gates} and the ancilla for all $n$ qubits, at the cost of incurring $6(n-m)$ additional CNOT gates    
\end{itemize}
\end{frame}

\begin{frame}
\frametitle{Comparison with the Previous Approach}
\begin{itemize}
\item The phase encoding in \emph{Hayes 2023}\footnote{\url{https://arxiv.org/pdf/2306.11073}} uses $n_l$ \alert{label qubits} (with $2^{n_l} =M$) as well as $n_c$ \alert{coefficient qubits} 
\item The overall gate cost has contributions from the label operation ($\mathcal{O}(2^{n_l}n)$), the addition and multiplication operations ($\mathcal{O}(n^2 + n_c^2)$), as well as loading the coefficients ($\mathcal{O}(n_c 2^{n_l} n_l^2)$):
\begin{equation}
C_\text{Hayes}(n, n_c, n_l) = \mathcal{O}(n^2 + 2^{n_l} [n + n_l^2 n_c] + n_c^2)
\end{equation}
\begin{alertblock}{Complexity Comparison}
The new approach results in a \alert{quadratic complexity reduction} in $n$, from $\mathcal{O}(n^2)$ to $\mathcal{O}(n)$. The $\mathcal{O}(Mn)$ term remains while the nu 
\end{alertblock}
\end{itemize}

\end{frame}


\begin{frame}
\frametitle{Comments Sarah}
For the other problem, yes this is exactly what I had in mind, this is the right idea. A couple of suggestions:
\begin{itemize}
\item I think that you can get rid of the ancillae entirely, and just condition directly on the first few (log M) qubits.
\item I agree that you should be able to simplify a bit more by thinking about applying the operators recursively.
\item Sadly it will always scale exponentially if we take $M \sim O(2^n)$. It would be helpful to consider breaking the circuit (conceptually, not literally...) into m = log M qubits (which will be the controls) and n-m remaining qubits (the targets). If m $\ll$ n, how does the complexity scale with m and n?
\item Finally, how does the complexity of applying the phase in this way compare to the previous method of calculating the phase in an ancilla register, applying the phase, and then uncomputing the result in the ancilla.
\end{itemize}

\end{frame}



\section{Handover}

\begin{frame}

\frametitle{Handover}

The code, documentation, slides, and poster are all available on GitHub:
\begin{center}
\vspace{0.6cm}
\href{https://github.com/david-f-amorim/PQC_function_evaluation}{\texttt{https://github.com/david-f-amorim/PQC\_function\_evaluation}}
\vspace{0.6cm}
\end{center}

\begin{itemize}
\item The source code is found in the directory \alert{\texttt{pqcprep}} 
\item The slides and poster are found in the directory \alert{\texttt{slides}}
\item The documentation is hosted externally  \href{https://david-f-amorim.github.io/PQC_function_evaluation/pqcprep.html}{\textcolor{purple}{here}}, which is also linked on GitHub
\end{itemize}

\end{frame}

\end{document}